# Generated by Django 2.2.13 on 2020-06-17 12:28

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Time at which object was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Time at which object was updated', null=True)),
                ('name', models.CharField(help_text='Name of the book', max_length=255)),
                ('slug', models.SlugField(help_text='Slug of the book', unique=True)),
                ('description', models.TextField(blank=True, help_text='Extra information of the Book')),
                ('book_quantity', models.IntegerField(default=0)),
                ('author', models.ForeignKey(help_text='Author of the book', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Time at which object was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Time at which object was updated', null=True)),
                ('name', models.CharField(help_text='Name of the Category', max_length=50)),
                ('slug', models.SlugField(help_text="Human readable slug used for hyperlinking e.g. 'drama-fiction'", unique=True)),
                ('created_by', models.ForeignKey(help_text='User who created the object', on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(help_text='User who updated the object', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='HistoricalRentedBook',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, help_text='Time at which object was created')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Time at which object was updated', null=True)),
                ('rent_date', models.DateField(default=datetime.date.today, help_text='Date at which book was rented')),
                ('return_date', models.DateField(blank=True, help_text='Date at which book was returned', null=True)),
                ('per_day_charge', models.FloatField(default=1.0, help_text='Per day charge for the book it was renteddefault its Rs. 1.0 per day for all the booksCan be changed for individual book')),
                ('has_charges_paid', models.BooleanField(default=False, help_text='Has the User paid the bills')),
                ('fine_applied', models.FloatField(default=0, help_text='Any fine applied to User for given book')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('book', models.ForeignKey(blank=True, db_constraint=False, help_text='Book who has taken the book on rent', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='book_rental.Book')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, help_text='User who created the object', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, help_text='User who updated the object', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, help_text='User who has taken the book on rent', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical rented book',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCategory',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, help_text='Time at which object was created')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Time at which object was updated', null=True)),
                ('name', models.CharField(help_text='Name of the Category', max_length=50)),
                ('slug', models.SlugField(help_text="Human readable slug used for hyperlinking e.g. 'drama-fiction'")),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, help_text='User who created the object', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, help_text='User who updated the object', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical category',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBook',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, help_text='Time at which object was created')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, help_text='Time at which object was updated', null=True)),
                ('name', models.CharField(help_text='Name of the book', max_length=255)),
                ('slug', models.SlugField(help_text='Slug of the book')),
                ('description', models.TextField(blank=True, help_text='Extra information of the Book')),
                ('book_quantity', models.IntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, help_text='Author of the book', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, db_constraint=False, help_text='Genre of the book', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='book_rental.Category')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, help_text='User who created the object', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, help_text='User who updated the object', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical book',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='book',
            name='category',
            field=models.ForeignKey(help_text='Genre of the book', on_delete=django.db.models.deletion.PROTECT, to='book_rental.Category'),
        ),
        migrations.AddField(
            model_name='book',
            name='created_by',
            field=models.ForeignKey(help_text='User who created the object', on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='book',
            name='updated_by',
            field=models.ForeignKey(help_text='User who updated the object', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='RentedBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Time at which object was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Time at which object was updated', null=True)),
                ('rent_date', models.DateField(default=datetime.date.today, help_text='Date at which book was rented')),
                ('return_date', models.DateField(blank=True, help_text='Date at which book was returned', null=True)),
                ('per_day_charge', models.FloatField(default=1.0, help_text='Per day charge for the book it was renteddefault its Rs. 1.0 per day for all the booksCan be changed for individual book')),
                ('has_charges_paid', models.BooleanField(default=False, help_text='Has the User paid the bills')),
                ('fine_applied', models.FloatField(default=0, help_text='Any fine applied to User for given book')),
                ('book', models.ForeignKey(help_text='Book who has taken the book on rent', on_delete=django.db.models.deletion.PROTECT, to='book_rental.Book')),
                ('created_by', models.ForeignKey(help_text='User who created the object', on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(help_text='User who updated the object', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text='User who has taken the book on rent', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('book', 'user', 'rent_date')},
            },
        ),
    ]
